swagger: "2.0"
info:
  title: beego Test API
  description: beego has a very cool tools to autogenerate documents for your API
  version: 1.0.0
  termsOfService: http://beego.me/
  contact:
    email: astaxie@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
basePath: /v1
paths:
  /app_info/:
    get:
      tags:
      - app_info
      description: get AppInfo
      operationId: AppInfoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.AppInfo'
        "403":
          description: ""
    post:
      tags:
      - app_info
      description: create AppInfo
      operationId: AppInfoController.Post
      parameters:
      - in: body
        name: body
        description: body for AppInfo content
        required: true
        schema:
          $ref: '#/definitions/models.AppInfo'
      responses:
        "201":
          description: '{int} models.AppInfo'
        "403":
          description: body is empty
  /app_info/{id}:
    get:
      tags:
      - app_info
      description: get AppInfo by id
      operationId: AppInfoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.AppInfo'
        "403":
          description: :id is empty
    put:
      tags:
      - app_info
      description: update the AppInfo
      operationId: AppInfoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for AppInfo content
        required: true
        schema:
          $ref: '#/definitions/models.AppInfo'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.AppInfo'
        "403":
          description: :id is not int
    delete:
      tags:
      - app_info
      description: delete the AppInfo
      operationId: AppInfoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /file_info/:
    get:
      tags:
      - file_info
      description: get FileInfo
      operationId: FileInfoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.FileInfo'
        "403":
          description: ""
    post:
      tags:
      - file_info
      description: create FileInfo
      operationId: FileInfoController.Post
      parameters:
      - in: body
        name: body
        description: body for FileInfo content
        required: true
        schema:
          $ref: '#/definitions/models.FileInfo'
      responses:
        "201":
          description: '{int} models.FileInfo'
        "403":
          description: body is empty
  /file_info/{id}:
    get:
      tags:
      - file_info
      description: get FileInfo by id
      operationId: FileInfoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.FileInfo'
        "403":
          description: :id is empty
    put:
      tags:
      - file_info
      description: update the FileInfo
      operationId: FileInfoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for FileInfo content
        required: true
        schema:
          $ref: '#/definitions/models.FileInfo'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.FileInfo'
        "403":
          description: :id is not int
    delete:
      tags:
      - file_info
      description: delete the FileInfo
      operationId: FileInfoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /user_app_info/:
    get:
      tags:
      - user_app_info
      description: get UserAppInfo
      operationId: UserAppInfoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.UserAppInfo'
        "403":
          description: ""
    post:
      tags:
      - user_app_info
      description: create UserAppInfo
      operationId: UserAppInfoController.Post
      parameters:
      - in: body
        name: body
        description: body for UserAppInfo content
        required: true
        schema:
          $ref: '#/definitions/models.UserAppInfo'
      responses:
        "201":
          description: '{int} models.UserAppInfo'
        "403":
          description: body is empty
  /user_app_info/{id}:
    get:
      tags:
      - user_app_info
      description: get UserAppInfo by id
      operationId: UserAppInfoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.UserAppInfo'
        "403":
          description: :id is empty
    put:
      tags:
      - user_app_info
      description: update the UserAppInfo
      operationId: UserAppInfoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for UserAppInfo content
        required: true
        schema:
          $ref: '#/definitions/models.UserAppInfo'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.UserAppInfo'
        "403":
          description: :id is not int
    delete:
      tags:
      - user_app_info
      description: delete the UserAppInfo
      operationId: UserAppInfoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /users/:
    get:
      tags:
      - users
      description: get Users
      operationId: UsersController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Users'
        "403":
          description: ""
    post:
      tags:
      - users
      description: create Users
      operationId: UsersController.Post
      parameters:
      - in: body
        name: body
        description: body for Users content
        required: true
        schema:
          $ref: '#/definitions/models.Users'
      responses:
        "201":
          description: '{int} models.Users'
        "403":
          description: body is empty
  /users/{id}:
    get:
      tags:
      - users
      description: get Users by id
      operationId: UsersController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Users'
        "403":
          description: :id is empty
    put:
      tags:
      - users
      description: update the Users
      operationId: UsersController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Users content
        required: true
        schema:
          $ref: '#/definitions/models.Users'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Users'
        "403":
          description: :id is not int
    delete:
      tags:
      - users
      description: delete the Users
      operationId: UsersController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
definitions:
  models.AppInfo:
    title: AppInfo
    type: object
    properties:
      AppName:
        type: string
      CreateDate:
        type: string
        format: string
      Description:
        type: string
      IconPath:
        type: string
      Id:
        type: integer
        format: int64
      UpdateDate:
        type: string
        format: string
      UserId:
        type: integer
        format: int64
      VersionCode:
        type: integer
        format: int32
      VersionId:
        type: string
  models.FileInfo:
    title: FileInfo
    type: object
    properties:
      AppInfoId:
        type: integer
        format: int64
      DownloadUrl:
        type: string
      Id:
        type: integer
        format: int64
      Md5:
        type: string
      PackageName:
        type: string
      Type:
        type: integer
        format: int32
      VersionCode:
        type: integer
        format: int32
  models.UserAppInfo:
    title: UserAppInfo
    type: object
    properties:
      AppId:
        type: integer
        format: int64
      Date:
        type: string
        format: string
      Id:
        type: integer
        format: int64
      UserId:
        type: integer
        format: int64
  models.Users:
    title: Users
    type: object
    properties:
      Id:
        type: integer
        format: int64
      UserDescription:
        type: string
      UserIcon:
        type: string
      UserName:
        type: string
      UserNick:
        type: string
      UserPwd:
        type: string
      UserType:
        type: integer
        format: int32
tags:
- name: app_info
  description: |
    AppInfoController operations for AppInfo
- name: file_info
  description: |
    FileInfoController operations for FileInfo
- name: user_app_info
  description: |
    UserAppInfoController operations for UserAppInfo
- name: users
  description: |
    UsersController operations for Users
